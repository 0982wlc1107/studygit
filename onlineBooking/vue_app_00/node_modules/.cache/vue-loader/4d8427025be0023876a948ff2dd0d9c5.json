{"remainingRequest":"c:\\xampp\\htdocs\\tml1903\\16VUE UI\\day05\\day05\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!c:\\xampp\\htdocs\\tml1903\\16VUE UI\\day05\\day05\\vue_app_00\\src\\components\\xz\\Cart.vue?vue&type=style&index=0&id=1a6f731a&scoped=true&lang=css","dependencies":[{"path":"c:\\xampp\\htdocs\\tml1903\\16VUE UI\\day05\\day05\\vue_app_00\\src\\components\\xz\\Cart.vue","mtime":1562306811966},{"path":"c:\\xampp\\htdocs\\tml1903\\16VUE UI\\day05\\day05\\vue_app_00\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"c:\\xampp\\htdocs\\tml1903\\16VUE UI\\day05\\day05\\vue_app_00\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1521907988000},{"path":"c:\\xampp\\htdocs\\tml1903\\16VUE UI\\day05\\day05\\vue_app_00\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"c:\\xampp\\htdocs\\tml1903\\16VUE UI\\day05\\day05\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"c:\\xampp\\htdocs\\tml1903\\16VUE UI\\day05\\day05\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.cart{\r\n  padding:10px;\r\n}\r\n.cart h3{\r\n   background-color:#f6f8fa;\r\n   height:40px;\r\n   line-height:40px;\r\n}\r\n/* 最外层的弹性布局 */\r\n.cart-item{\r\n  display:flex;\r\n  justify-content:space-between;\r\n  align-items:center;\r\n}\r\n.leftImgText{\r\n  /* 默认子元素水平对齐 */\r\n  display:flex;\r\n  align-items:center;\r\n}\r\n.leftImgText img{\r\n  width:50px;\r\n  height:50px;\r\n}\r\n.price{\r\n  margin-left:10px;\r\n}\r\n",{"version":3,"sources":["Cart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Cart.vue","sourceRoot":"src\\components\\xz","sourcesContent":["<template>\r\n  <div>\r\n    <!--Cart.vue-->\r\n    <div class=\"cart\">\r\n      <h3>购物车数量：<span style=\"color:red\">{{$store.getters.getCartCount}}</span></h3>\r\n      <div class=\"selectAll\">\r\n        <!--全选-->\r\n        <!--改变状态时，触发事件  @change-->\r\n        全选<input type=\"checkbox\" @change=\"selectALL\">\r\n      </div>\r\n      <div class=\"cart-item\" v-for=\"(item,i) of list\" :key=\"i\">\r\n        <!--商品列表-->\r\n        <div class=\"leftImgText\">\r\n          <!--双向绑定cb属性，控制checked状态-->\r\n          <input type=\"checkbox\" v-model=\"item.cb\">\r\n          <img :src=\"'http://127.0.0.1:3000/img/'+item.img_url\">\r\n          <div class=\"price\">\r\n            <span>{{item.price.toFixed(2)}}</span>\r\n          </div>\r\n        </div>\r\n        <!--利用自定义属性传id-->\r\n        <mt-button @click=\"delItem\" :data-id=\"item.id\">删除</mt-button>\r\n      </div>\r\n      <div>\r\n        <!--删除选中商品-->\r\n        <mt-button size=\"large\" @click=\"delItems\">删除选中的商品</mt-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data(){\r\n      return {\r\n        list:[],\r\n      }\r\n    },\r\n    methods:{\r\n      // 加载购物车列表\r\n      loadMore(){\r\n        // 先清空购物车数量\r\n        // 不清空的话，数量会追加 \r\n        this.$store.commit(\"clearCount\");\r\n        var url=\"cart\";\r\n        // 登录后的uid在接口中获得\r\n        this.axios.get(url).then(result=>{\r\n          // console.log(result.data);\r\n          // this.list=result.data.data;\r\n          // 1. 获取服务器数组\r\n          var rows=result.data.data;\r\n          // 2. 创建循环为数组中每个对象添加cb属性 cb控制商品前复选框\r\n          for(var item of rows){\r\n            // 2.1 添加cb属性\r\n            item.cb=false;\r\n            // 2.2 更新购物车数量\r\n            this.$store.commit(\"increment\");\r\n          }\r\n          // 3. 将新数据保存\r\n          this.list=rows;\r\n        })\r\n      },\r\n      // 全选购物车列表\r\n      selectALL(e){\r\n        // 要拿到当前复选框的状态，只能用事件对象获得\r\n        // e.target.checked  false true\r\n        // 获得全选按钮的状态\r\n        var cb=e.target.checked;\r\n        // 循环让每一个复选框的cb属性和全选复选框的状态一致\r\n        for(var item of this.list){\r\n          item.cb=cb;\r\n        }\r\n      },\r\n      // 删除选中的一个商品\r\n      delItem(e){\r\n        // 1. 获取当前商品Id\r\n        var id=parseInt(e.target.dataset.id);\r\n        // 2. 显示交互确认框 异步操作，不等你操作完，就会往下执行\r\n        this.$messagebox.confirm(\"是否删除\").then(active=>{\r\n          console.log(active);\r\n          // 3. 如果用户选择了\"确定\"\r\n          // 4. 发送ajax删除数据\r\n          // 5. 如果用户选择\"取消\"\r\n          this.axios.get(\"delItem\",{params:{id}}).then(result=>{\r\n            // 重新加载数据\r\n            this.loadMore();\r\n          })\r\n        }).catch(err=>{\r\n          console.log(err);\r\n        });\r\n        console.log(id);\r\n      },\r\n      // 删除选中的多个商品\r\n      delItems(){\r\n        var ids=[];\r\n        for(var item of this.list){\r\n          // console.log(item);\r\n          if(item.cb){\r\n            ids.push(item.id);\r\n          }\r\n        }\r\n        ids=ids.join(\",\");\r\n        console.log(ids);\r\n        // console.log(ids);\r\n        if(ids){  //如果选中了商品，ids为真，则执行删除操作\r\n          this.$messagebox.confirm(\"是否删除选中的商品\").then(active=>{\r\n            // console.log(active);\r\n            // 当用户点击确认后，发送axios请求\r\n            this.axios.get(\"delItems\",{params:{ids}}).then(result=>{\r\n              // 删除后，重新加载购物车列表\r\n              this.loadMore();\r\n            })\r\n          }).catch(err=>{\r\n            console.log(err)\r\n          })\r\n        }else{ //否则，没有选中商品，ids为空为false，发送提示信息\r\n          this.$toast(\"请选择需要删除的商品\");\r\n        }\r\n      }\r\n    },\r\n    created(){\r\n      // 调用当前组件的函数，需要添加this\r\n      this.loadMore();\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n.cart{\r\n  padding:10px;\r\n}\r\n.cart h3{\r\n   background-color:#f6f8fa;\r\n   height:40px;\r\n   line-height:40px;\r\n}\r\n/* 最外层的弹性布局 */\r\n.cart-item{\r\n  display:flex;\r\n  justify-content:space-between;\r\n  align-items:center;\r\n}\r\n.leftImgText{\r\n  /* 默认子元素水平对齐 */\r\n  display:flex;\r\n  align-items:center;\r\n}\r\n.leftImgText img{\r\n  width:50px;\r\n  height:50px;\r\n}\r\n.price{\r\n  margin-left:10px;\r\n}\r\n</style>"]}]}