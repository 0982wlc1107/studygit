{"remainingRequest":"c:\\xampp\\htdocs\\tml1903\\16VUE UI\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!c:\\xampp\\htdocs\\tml1903\\16VUE UI\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!c:\\xampp\\htdocs\\tml1903\\16VUE UI\\vue_app_00\\src\\components\\xz\\Login.vue?vue&type=script&lang=js","dependencies":[{"path":"c:\\xampp\\htdocs\\tml1903\\16VUE UI\\vue_app_00\\src\\components\\xz\\Login.vue","mtime":1562200070746},{"path":"c:\\xampp\\htdocs\\tml1903\\16VUE UI\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"c:\\xampp\\htdocs\\tml1903\\16VUE UI\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"c:\\xampp\\htdocs\\tml1903\\16VUE UI\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      uname: \"\",\n      upwd: \"\",\n      unameHolder: \"请输入用户名\",\n      upwdHolder: \"请输入密码\"\n    };\n  },\n  // data结束\n  methods: {\n    login: function login() {\n      var _this = this;\n\n      // 完成登录\n      // 1. 获取用户名和密码\n      var uname = this.uname;\n      var upwd = this.upwd; // 2. 创建一个正则表达式 字母数字下划线3~12\n\n      var reg = /^\\w{3,12}$/i; // i: 忽略大小写\n      // console.log(reg.test(uname));\n      // 3. 验证用户名 出错提示\n\n      if (!reg.test(uname)) {\n        this.$toast(\"用户名格式不正确\");\n        return; // 停止本次函数的调用\n      } // 4. 验证密码 出错提示\n\n\n      if (!reg.test(upwd)) {\n        this.$toast(\"密码格式不正确\");\n        return;\n      } // this.$toast(`登录成功，欢迎${uname}`);\n      // 5. 发送ajax请求 axios\n\n\n      var url = \"login\";\n      var obj = {\n        uname: uname,\n        upwd: upwd\n      }; // uname:uname,upwd:upwd\n\n      this.axios.get(url, {\n        params: obj\n      }).then(function (result) {\n        if (result.data.code > 0) {\n          _this.$router.push(\"/Home1\");\n        } else {\n          _this.$messagebox(\"提示\", \"用户名或密码有误\");\n        }\n      });\n    }\n  } // methods结束\n\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;AASA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,aAAA,EADA;AAEA,YAAA,EAFA;AAGA,mBAAA,QAHA;AAIA,kBAAA;AAJA,KAAA;AAMA,GARA;AAQA;AACA,WAAA;AACA,SADA,mBACA;AAAA;;AACA;AACA;AACA,UAAA,QAAA,KAAA,KAAA;AACA,UAAA,OAAA,KAAA,IAAA,CAJA,CAKA;;AACA,UAAA,MAAA,aAAA,CANA,CAMA;AACA;AACA;;AACA,UAAA,CAAA,IAAA,IAAA,CAAA,KAAA,CAAA,EAAA;AACA,aAAA,MAAA,CAAA,UAAA;AACA,eAFA,CAEA;AACA,OAZA,CAaA;;;AACA,UAAA,CAAA,IAAA,IAAA,CAAA,IAAA,CAAA,EAAA;AACA,aAAA,MAAA,CAAA,SAAA;AACA;AACA,OAjBA,CAkBA;AACA;;;AACA,UAAA,MAAA,OAAA;AACA,UAAA,MAAA;AAAA,oBAAA;AAAA;AAAA,OAAA,CArBA,CAqBA;;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA;AACA,gBAAA;AADA,OAAA,EAEA,IAFA,CAEA,kBAAA;AACA,YAAA,OAAA,IAAA,CAAA,IAAA,GAAA,CAAA,EAAA;AACA,gBAAA,OAAA,CAAA,IAAA,CAAA,QAAA;AACA,SAFA,MAEA;AACA,gBAAA,WAAA,CAAA,IAAA,EAAA,UAAA;AACA;AACA,OARA;AASA;AAhCA,GATA,CA4CA;;AA5CA,CAAA","sourcesContent":["<template>\r\n  <div class=\"login_container\">\r\n    <mt-field v-model=\"uname\" :placeholder=\"unameHolder\"></mt-field>\r\n    <mt-field v-model=\"upwd\" type=\"password\" :placeholder=\"upwdHolder\"></mt-field>\r\n    <mt-button size=\"large\" class=\"mybutton\" @click=\"login\">登录</mt-button>\r\n  </div> \r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data(){\r\n      return {\r\n        uname:\"\",\r\n        upwd:\"\",\r\n        unameHolder:\"请输入用户名\",\r\n        upwdHolder:\"请输入密码\"\r\n      }\r\n    },// data结束\r\n    methods:{\r\n      login(){\r\n        // 完成登录\r\n        // 1. 获取用户名和密码\r\n        var uname=this.uname;\r\n        var upwd=this.upwd;\r\n        // 2. 创建一个正则表达式 字母数字下划线3~12\r\n        var reg=/^\\w{3,12}$/i;   // i: 忽略大小写\r\n        // console.log(reg.test(uname));\r\n        // 3. 验证用户名 出错提示\r\n        if(!reg.test(uname)){\r\n          this.$toast(\"用户名格式不正确\");\r\n          return;  // 停止本次函数的调用\r\n        }\r\n        // 4. 验证密码 出错提示\r\n        if(!reg.test(upwd)){\r\n          this.$toast(\"密码格式不正确\");\r\n          return;\r\n        }\r\n        // this.$toast(`登录成功，欢迎${uname}`);\r\n        // 5. 发送ajax请求 axios\r\n        var url=\"login\";\r\n        var obj={uname,upwd};  // uname:uname,upwd:upwd\r\n        this.axios.get(url,{\r\n          params:obj\r\n        }).then(result=>{\r\n          if(result.data.code>0){\r\n            this.$router.push(\"/Home1\");\r\n          }else{\r\n            this.$messagebox(\"提示\",\"用户名或密码有误\");\r\n          }\r\n        })\r\n       }\r\n       \r\n\r\n    },// methods结束\r\n    \r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n.login_container{\r\n  padding-top:20px;\r\n  background-color:#ddd;\r\n}\r\n</style>"],"sourceRoot":"src\\components\\xz"}]}